7C00|          |                        ; Please note, that all numbers in this file are hexadecimal.
7C00|          |                        ; Also, treat the mnemonics as comments. If you are using this
7C00|          |                        ; to defend against some sort of attack, you should only trust
7C00|          |                        ; the hex. This is why an assembler is the first and only goal
7C00|          |                        ; right now.
7C00|EA057C0000| JMP 0:7C05             ; Some BIOSes jump to 0000:7C00, some jump to 07C0:0000. While
7C05|          |                        ; this results in the  physical address, this difference can,
7C05|          |                        ; and will cause chaos.
7C05|FA        |        CLI             ; Disable interrupts when setting up the stack
7C06|33C9      |        XOR CX, CX      ; We use CX here to use it later as a parameter
7C08|BD007C    |        MOV BP, 7C00
7C0B|89EC      |        MOV SP, BP      ; 7C00-7C0F is used as the disk packet, the stack is just below it
7C0D|8ED1      |        MOV SS, CX      ; Set up the segments
7C0F|8ED9      |        MOV DS, CX
7C11|8EC1      |        MOV ES, CX      ; first instruction not overwritten by variables
7C13|885610    |        MOV [BP+10], DL ; we just finished executing that memory location, but that's fine :P
7C16|FB        |        STI             ; the BIOS saves the disk number in DL when jumping to 7C00
7C17|B40F      |        MOV AH, 0F      ; Clear the screen
7C19|CD10      |        INT 10
7C1B|B400      |        MOV AH, 00
7C1D|CD10      |        INT 10
7C1F|41        |        INC CX            ; Load the VBR of the first partition at 7E00
7C20|668B86C601|        MOV EAX, [BP+1C6]
7C25|33DB      |        XOR BX, BX
7C27|BF007E    |        MOV DI, 7E00
7C2A|E82E01    |        CALL DiskRead
7C2D|EBFE      |
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |00000000|
    |          | DiskRead:              ; Read CX sectors at LBA EAX to BX:DI
7D5B|C746001000|        MOV [BP+00], 0010
7D60|894E02    |        MOV [BP+02], CX
7D63|897E04    |        MOV [BP+04], DI
7D66|895E06    |        MOV [BP+06], BX
7D69|66894608  |        MOV [BP+08], EAX
7D6D|6633C0    |        XOR EAX, EAX
7D70|6689460C  |        MOV [BP+0C], EAX
7D74|8A5610    |        MOV DL, [BP+10]
7D77|B442      |        MOV AH, 42
7D79|89EE      |        MOV SI, BP
7D7B|CD13      |        INT 13
7D7D|7202      |        JC DiskError
7D7F|C3        |        RET
7D80|          | DiskError:
7D80|BE987D    |        MOV SI, .msg
7D83|AC        | .loop: LODSB
7D84|08C0      |        OR AL, AL
7D86|7405      |        JZ .end
7D88|E82300    |        CALL PrintChar
7D8B|EBF6      |        JMP .loop
7D8D|8AC4      | .end:  MOV AL, AH
7D8F|E81100    |        CALL PrintHexByte
7D92|FA        |        CLI
7D93|F4        | .halt: HLT
7D94|EBFD      |        JMP .halt
7D96|          | .msg:
7D96|4469736B20|        DB 'Disk error: ',0
7D9B|6572726F72|
7DA0|3A2000    |
7DA3|          | PrintHexByte:
7DA3|50        |        PUSH AX         ; Print hex byte in AL
7DA4|C0E804    |        SHR AL, 04
7DA7|E80300    |        CALL PrintHexDigit
7DAA|58        |        POP AX
7DAB|240F      |        AND AL, 0F
7DAD|          |                        ; fallthrough
7DAD|          | PrintHexDigit:
7DAD|0430      |        ADD AL, 30      ; Print hex digit in AL - add '0'
7DAF|3C39      |        CMP AL, 39      ; compare to '9'
7DB1|7602      |        JBE PrintChar
7DB3|0407      |        ADD AL, 07      ; add 'A' - '0' - 0A
7DB5|          |                        ; fallthrough
7DB5|          | PrintChar:
7DB5|60        |        PUSHA           ; Print character in AL
7DB6|33DB      |        XOR BX, BX
7DB8|B40E      |        MOV AH, 0E
7DBA|CD10      |        INT 10
7DBC|61        |        POPA
7DBD|C3        |        RET
7DBE|          |
7DBE|00000000  | Partition 1            ; And here is where the partition table starts. Please note,
7DC2|00000000  |                        ; that these are only dummy bytes, to be replaced when
7DC6|00000000  |                        ; writing to a disk or a disk image.
7DCA|00000000  |
7DCE|00000000  | Partition 2
7DD2|00000000  |
7DD6|00000000  |
7DDA|00000000  |
7DDE|00000000  | Partition 3
7DE2|00000000  |
7DE6|00000000  |
7DEA|00000000  |
7DEE|00000000  | Partition 4
7DF2|00000000  |
7DF6|00000000  |
7DFA|00000000  |
7DFE|55AA      | The boot signature
