7C00|          |                        ; Please note, that all numbers in this file are hexadecimal.
7C00|          |                        ; Also, treat the mnemonics as comments. If you are using this
7C00|          |                        ; to defend against some sort of attack, you should only trust
7C00|          |                        ; the hex. This is why an assembler is the first and only goal
7C00|          |                        ; right now. This implements FAT32, with the assumption that
7C00|          |                        ; sector size is 512 bytes and cluster size is 1 sector. Long
7C00|          |                        ; file names are not supported. We use a part of the code section
7C00|          |                        ; as variables after executing it:
7C00|          | 7C00 - 7C0F  The EDD disk packet
7C00|          | 7C10 - 7C13  The first FAT sector
7C00|          | 7C14 - 7C17  The currently loaded cluster (buffer at 8200)
7C00|          | 7C18 - 7C1B  The sector of cluster 0
7C00|EA057C0000|        JMP 0:7C05      ; Some BIOSes jump to 0000:7C00, some jump to 07C0:0000. While
7C05|          |                        ; this results in the same physical address, this difference can,
7C05|          |                        ; and will cause chaos.
7C05|FA        |        CLI             ; Disable interrupts when setting up the stack
7C06|33C9      |        XOR CX, CX
7C08|BD007C    |        MOV BP, 7C00
7C0B|89EC      |        MOV SP, BP      ; 7C00-7C0F is used as the disk packet, the stack is just below it
7C0D|8ED1      |        MOV SS, CX      ; Set up the segments
7C0F|8ED9      |        MOV DS, CX
7C11|8EC1      |        MOV ES, CX
7C13|8816767D  |        MOV [7D76], DL  ; Patch in the disk number the BIOS left for us in DL at the only
7C17|FB        |        STI             ; place we need it
7C18|B40F      |        MOV AH, 0F      ; Clear the screen
7C1A|CD10      |        INT 10
7C1C|B400      |        MOV AH, 00
7C1E|CD10      |        INT 10
7C20|66A1C67D  |        MOV EAX, [7DC6]   ; First partition start LBA
7C24|BF007E    |        MOV DI, 7E00
7C27|E83001    |        CALL DiskReadSegment0
7C2A|660FB7060E7E|      MOVZX EAX, word[7E0E]
7C30|660306C67D|        ADD EAX, [7DC6]
7C35|66894610  |        MOV [BP+10], EAX
7C39|66A1247E  |        MOV EAX, [7E24]   ; Sectors per FAT
7C3D|660FB60E107E|      MOVZX ECX, byte[7E10]    ; Number of FATs
7C43|66F7E1    |        MUL ECX
7C46|66034610  |        ADD EAX, [BP+10]   ; First FAT sector
7C4A|6648      |        DEC EAX
7C4C|6648      |        DEC EAX
7C4E|66894618  |        MOV [BP+18], EAX
7C52|6633C0    |        XOR EAX, EAX
7C55|B002      |        MOV AL, 02         ; testing
7C57|E8F300    |        CALL ReadCluster
7C5A|E8CC00    |        CALL ReadNextCluster
7C5D|0F821F01  |        
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |0000000000000000|
    |000000000000|
7D27|          | SetCarryAndReturn:
7D27|F9        |        STC
7D28|C3        |        RET
7D29|          | ReadNextCluster:
7D29|668B4614  |        MOV EAX, [BP+14]
7D2D|66C1E807  |        SHR EAX, 07
7D31|66034610  |        ADD EAX, [BP+10]
7D35|BF0080    |        MOV DI, 8000
7D38|E81F00    |        CALL DiskRead
7D3B|8A5E14    |        MOV BL, [BP+14]
7D3E|D0E3      |        SHL BL, 1
7D40|D1E3      |        SHL BX, 1
7D42|668B01    |        MOV EAX, [BX+DI] ; fallthrough
7D45|663DF8FFFF0F|      CMP EAX, 0FFFFFF8
7D4B|73DA      |        JAE SetCarryAndReturn
7D4D|          | ReadCluster:
7D4D|66894614  |        MOV [BP+14], EAX
7D51|66034618  |        ADD EAX, [BP+18]
7D55|BF0082    |        MOV DI, 8200    ; fallthrough
7D58|          | DiskReadSegment0:
7D58|33DB      |        XOR BX, BX
7D5A|          | DiskRead:              ; Read a sector at LBA EAX to BX:DI
7D5A|C746001000|        MOV [BP+00], 0010
7D5F|C746020100|        MOV [BP+02], CX
7D64|897E04    |        MOV [BP+04], DI
7D67|895E06    |        MOV [BP+06], BX
7D6A|66894608  |        MOV [BP+08], EAX
7D6E|6633C0    |        XOR EAX, EAX
7D71|6689460C  |        MOV [BP+0C], EAX
7D75|B2FF      |        MOV DL, (patched at runtime)
7D77|B442      |        MOV AH, 42
7D79|89EE      |        MOV SI, BP
7D7B|CD13      |        INT 13
7D7D|7201      |        JC DiskError
7D7F|C3        |        RET
7D80|          | DiskError:
7D80|BE967D    |        MOV SI, .msg
7D83|AC        | .loop: LODSB
7D84|08C0      |        OR AL, AL
7D86|7405      |        JZ .end
7D88|E82A00    |        CALL PrintChar
7D8B|EBF6      |        JMP .loop
7D8D|8AC4      | .end:  MOV AL, AH
7D8F|E81100    |        CALL PrintHexByte
7D92|FA        |        CLI
7D93|F4        | .halt: HLT
7D94|EBFD      |        JMP .halt
7D96|          | .msg:
7D96|4469736B20|        DB 'Disk error: ',0
7D9B|6572726F72|
7DA0|3A2000    |
7DA3|          | PrintHexByte:
7DA3|50        |        PUSH AX         ; Print hex byte in AL
7DA4|C0E804    |        SHR AL, 04
7DA7|E80300    |        CALL PrintHexDigit
7DAA|58        |        POP AX
7DAB|240F      |        AND AL, 0F
7DAD|          |                        ; fallthrough
7DAD|          | PrintHexDigit:
7DAD|0430      |        ADD AL, 30      ; Print hex digit in AL - add '0'
7DAF|3C39      |        CMP AL, 39      ; compare to '9'
7DB1|7602      |        JBE PrintChar
7DB3|0407      |        ADD AL, 07      ; add 'A' - '0' - 0A
7DB5|          |                        ; fallthrough
7DB5|          | PrintChar:
7DB5|60        |        PUSHA           ; Print character in AL
7DB6|33DB      |        XOR BX, BX
7DB8|B40E      |        MOV AH, 0E
7DBA|CD10      |        INT 10
7DBC|61        |        POPA
7DBD|C3        |        RET
7DBE|          |
7DBE|00000000  | Partition 1            ; And here is where the partition table starts. Please note,
7DC2|00000000  |                        ; that these are only dummy bytes, to be replaced when
7DC6|00000000  |                        ; writing to a disk or a disk image.
7DCA|00000000  |
7DCE|00000000  | Partition 2
7DD2|00000000  |
7DD6|00000000  |
7DDA|00000000  |
7DDE|00000000  | Partition 3
7DE2|00000000  |
7DE6|00000000  |
7DEA|00000000  |
7DEE|00000000  | Partition 4
7DF2|00000000  |
7DF6|00000000  |
7DFA|00000000  |
7DFE|55AA      | The boot signature
